# $ = require 'jquery'
# _ = require 'lodash'
# Backbone = require 'backbone'
FileItemView = ( require 'views/FileItemView' ).FileItemView
FileItemModel = ( require 'models/FileItemModel' ).FileItemModel
FileItemCollection = ( require 'collections/FileItemCollection' ).FileItemCollection

Service = require 'Service'

#文件视图
exports.AppView = Backbone.View.extend
	initialize:( options )->
		$( '#big-img-container' ).hide()
		self = this
		files = new FileItemCollection()
		self.files = files
		self.listenTo files, "add", this.addOne
		self.listenTo files, 'reset', this.addAll
		window.fileChangeCallback = ()->
			self.fileChangeCallback()
		Service.getFilesById.apply self
			.done ( data )->
				if data.success
					files.reset data.obj
				else
					layer.alert '根据单号请求附件列表失败！'
			.fail ()->
				layer.alert '根据单号请求附件列表失败！'

	events:
		'click .add-file':'addFile'
		# 'change #hid-input-file':'fileChangeCallback'
		
	#选择文件
	addFile:()->
		#选择文件，选择完成上传到服务器
		$('#hid-input-file').click()

	#选完之后直接上传
	fileChangeCallback:()->
		_handler = ( event )->
			console.log( event )
			status = event.target.status;
			responseText = event.target.responseText;
			if status >= 200 && status < 300
				console.log( responseText )
				data = eval( '(' + responseText + ')' )
				if data.ok
					#todo 以上只是把图片临时保存到磁盘，还需要调用java的方法取文件，插库,文件名也从前台传过去
					modTmp = new FileItemModel
						attachId: data.obj.ATTACH_ID
						src: data.obj.PATH
					layer.msg( """上传成功！""", {icon: 1, time: 2000 } )
					layer.close idx
			else
				layer.msg( """上传失败！""", {icon: 1, time: 2000 } )
				layer.close idx

		f = $('#hid-input-file')[0].files[0]
		idx = layer.load '上传中'
		xhr = new XMLHttpRequest()
		xhr.open( 'POST', 'http://' + document.domain + "/uploadImg" )
		xhr.timeout = 60000
		xhr.onload = _handler
		xhr.onerror = _handler
		xhr.onabort = _handler
		xhr.send( f )

	#添加一个文件
	addOne:( d )->
		itemView = new FileItemView( {model:d} )
		this.$el.find( '.add-file' )
			.before( itemView.render().$el )

	addAll: ()->
		this.files.each this.addOne, this