# $ = require 'jquery'
# _ = require 'lodash'
# Backbone = require 'backbone'
FileItemView = ( require 'views/FileItemView' ).FileItemView
FileItemModel = ( require 'models/FileItemModel' ).FileItemModel
FileItemCollection = ( require 'collections/FileItemCollection' ).FileItemCollection

Service = require 'Service'

#文件视图
exports.AppView = Backbone.View.extend
	initialize:( options )->
		self = this
		files = new FileItemCollection()
		self.files = files
		self.listenTo files, "add", this.addOne
		self.listenTo files, 'reset', this.addAll
		window.fileChangeCallback = ()->
			self.fileChangeCallback()
		Service.getFilesById.apply self
			.done ( data )->
				if data.success
					files.reset data.obj
				else
					layer.alert '根据单号请求附件列表失败！'
			.fail ()->
				layer.alert '根据单号请求附件列表失败！'

	events:
		'click .add-file':'addFile'
		# 'change #hid-input-file':'fileChangeCallback'
		
	#选择文件
	addFile:()->
		#选择文件，选择完成上传到服务器
		$('#hid-input-file').click()

	#选完之后直接上传
	fileChangeCallback:()->
		f = $('#hid-input-file')[0].files[0]
		idx = layer.load '上传中'
		$.ajax(
			url:'http://' + document.domain + "/uploadImg"
			method:'POST',
			contentType:'application/octet-stream',
			dataType:'json'
			data: f
		).done ( data )->
			if data.success
				modTmp = new FileItemModel
					attachId: data.obj.ATTACH_ID
					src: data.obj.PATH
				self.files.push modTmp
		.always ()->
			layer.close idx

	#添加一个文件
	addOne:( d )->
		this.$el.find( '.file-item-container:last' )
			.after( new FileItemView( {model:d} ).render() )

	addAll: ()->
		this.files.each this.addOne, this