Backbone = require 'backbone'

selLength = 0 #选中的，未上传的条数
selUploadedLength = 0 #已成功上传进度
selFiledLength = 0 #失败的条数
selDealedLength = 0 #已经处理玩的条数
$curDom = null #当前正在上传中的元素
layerIdx = null

options = 
	shutter_ogg_url: 'http://' + document.domain + ':' + location.port + "/jpeg_camera/shutter.ogg"
	shutter_mp3_url: 'http://' + document.domain + ':' + location.port + "/jpeg_camera/shutter.mp3"
	swf_url: 'http://' + document.domain + ':' + location.port + "/jpeg_camera/jpeg_camera.swf"

camera = new JpegCamera("#camera", options).ready( ( info )->
	$("#take_snapshots").show();
	$("#camera_info").html """Camera resolution: #{info.video_width} x #{info.video_height}"""
	# this.get_stats( update_stream_stats )
)

# 应用
exports.AppView = Backbone.View.extend
	initialize:( options )->
		# update_stream_stats = ( stats )->
		# 	$("#stream_stats").html """"Mean luminance = #{stats.mean}; Standard Deviation = #{stats.std}"""
		# 	setTimeout( ( ()-> camera.get_stats( update_stream_stats) } ), 1000 )

	events:
		'click #close-btn':'closeFun'
		'click #take_snapshots':'take_snapshots'
		'click #select_snapshot_all': 'select_snapshot_all'
		'click #select_snapshot_allunsel': 'select_snapshot_allunsel'
		'click .item': 'select_snapshot'
		'click #upload_snapshot':'upload_snapshot'
		'click #discard_snapshot':'discard_snapshot'

	closeFun:()->
		window.opener.location.href = window.opener.location.href;
		window.close();

	take_snapshots:()->
		snapshot = camera.capture()
		if JpegCamera.canvas_supported()
			snapshot.get_canvas( this.add_snapshot );
		else
			# <canvas> is not supported in this browser. We'll use anonymous
			# graphic instead.
			image = document.createElement("img");
			image.src = "no_canvas_photo.jpg";
			setTimeout( ( ()->add_snapshot.call(snapshot, image) ), 1 )

	add_snapshot:( element )->
		$(element).data("snapshot", this).addClass("item");
		$container = $("#snapshots").append(element);
		$camera = $("#camera");
		camera_ratio = $camera.innerWidth() / $camera.innerHeight();
		height = $container.height()
		element.style.height = "" + height + "px";
		element.style.width = "" + Math.round(camera_ratio * height) + "px";
		scroll = $container[0].scrollWidth - $container.innerWidth();
		$container.animate( scrollLeft: scroll, 200 )

	select_snapshot:( e )->
		$target = $( ( e || window.event ).target )
		$target.toggleClass( 'selected' )

	select_snapshot_all:()->
		$( '.item' ).addClass( 'selected' )

	select_snapshot_allunsel:()->
		$( '.item' ).removeClass( 'selected' )

	upload_snapshot:()->
		self = this
		$selected = $( ".item.selected" ).not( ".item.uploaded" )
		if !$selected or $selected.length is 0
			layer.alert( '请先选择一张图片！' )
		else
			api_url = 'http://' + document.domain + ':' + location.port + $("#api_url").val()
			layerIdx = layer.load( '上传中。。。' )
			selLength = $selected.length #选中的，未上传的长度
			selUploadedLength = 0 #已成功上传进度
			selFiledLength = 0 #失败的条数
			selDealedLength = 0 #已经处理玩的条数
			$selected.each ( idx, dom )->
				$curDom = $( dom )
				snapshot = $( dom ).data( "snapshot" );
				snapshot.upload( {api_url: api_url} ).done( self.upload_done ).fail( self.upload_fail );

	upload_done:( response )->
		console.log( response )
		rlt = eval( '(' + response + ')' )
		$canvas = $(this._extra_canvas)
		if rlt.ok
			$.ajax
				url:'applyController.do?upLoadJpeg',
				method:'GET',
				dataType:'json',
				data: {path:rlt.data,applyId:window.applyId,type:window.type}
			.done ( data )->
				if data.success
					selUploadedLength += 1
					layer.msg( """共要上传图片#{selLength}张，已成功上传#{selUploadedLength}！""", {icon: 1, time: 3000 } )
					$canvas.addClass('uploaded').data( 'id', data.obj.ID )
					$canvas.after( """<span class="sign">√</span>""" )
				else
					selFiledLength += 1
					layer.msg( '上传图片成功，插入附件表失败！', {icon: 2, time: 1000 } )
			.fail ()->
				selFiledLength += 1
				
				layer.msg( '上传图片失败！', {icon: 2, time: 1000 } )
			.always ()->
				selDealedLength += 1
				if selDealedLength is selLength
					layer.msg( """共要上传图片#{selLength}张，已成功上传#{selUploadedLength}，上传结束！""", {icon: 1, time: 1000 } )
					layer.close layerIdx
		else
			selFiledLength += 1
			selDealedLength += 1
			if selDealedLength is selLength
				layer.msg( """共要上传图片#{selLength}张，已成功上传#{selUploadedLength}，上传结束！""", {icon: 1, time: 1000 } )
				layer.close layerIdx
			else
				layer.msg( '上传图片失败！', {icon: 2, time: 1000 } )

	upload_fail:( code, error, response )->
		selFiledLength += 1
		selDealedLength += 1
		if selDealedLength is selLength
			layer.msg( """共要上传图片#{selLength}张，已成功上传#{selUploadedLength}，上传结束！""", {icon: 1, time: 1000 } )
			layer.close layerIdx
		else
			layer.msg( """上传图片失败 #{code} ( #{error} ) ！""", {icon: 1, time: 1000 } )

	# 删除一些图片，如果已经上传的，那就需要调用ajax删除服务器上的文件了
	discard_snapshot:()->
		layer.confirm( '是否要移除选中的图片，已经上传服务器的文件也将被移除?', {icon: 3, title:'提示'}, ( index )->
			$selected = $( ".item.selected" )
			$selected.each ( idx, dom )->
				$dom = $( dom )
				if $dom.data('id')
					$.ajax
						url:'applyController.do?deleteJpeg&id=' + $dom.data('id'),
						method:'GET',
						dataType:'json'
					.done ( data )->
						if data.success
							$dom.data("snapshot").discard()
							$dom.hide( "slow", ( ()-> $( this ).remove();$( this ).next('span').remove() ) )
						else
							layer.msg '删除服务器已上传文件失败！',{ icom:2, time: 1000}
					.fail ()->
						layer.msg '删除服务器已上传文件失败！',{ icom:2, time: 1000}
				else
					$dom.data("snapshot").discard()
					$dom.hide( "slow", ()-> $( this ).remove() )
			layer.close(index);
		)
		